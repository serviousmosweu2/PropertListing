// <auto-generated />
using DatabaseObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseObjects.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200529220604_SeedProperties")]
    partial class SeedProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Domain.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailabe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LandlordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MarketValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RentValue")
                        .HasColumnType("TEXT");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyId = 1,
                            IsAvailabe = false,
                            LandlordId = 1,
                            LocationId = 1,
                            MarketValue = 0m,
                            PropertyTypeId = 1,
                            RentValue = 100m
                        },
                        new
                        {
                            PropertyId = 2,
                            IsAvailabe = false,
                            LandlordId = 1,
                            LocationId = 1,
                            MarketValue = 0m,
                            PropertyTypeId = 1,
                            RentValue = 100m
                        },
                        new
                        {
                            PropertyId = 3,
                            IsAvailabe = false,
                            LandlordId = 1,
                            LocationId = 1,
                            MarketValue = 0m,
                            PropertyTypeId = 1,
                            RentValue = 100m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
